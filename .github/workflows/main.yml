# Workflow to build and deploy to Azure cloud the License Server UI  

name: License Server CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push to main branch
  push:
    branches: [ master ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 12.20
      uses: actions/setup-node@v1
      with:
        node-version: '12.20'
    
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H_%M_%S')"
    
    - name: Get Commit Short Hash
      id: hash
      run: echo "::set-output name=hash::$(git rev-parse --short "$GITHUB_SHA")"
    
    # - name: Build Angular Integration web app
    #   run: |
    #     cd ./ui
    #     npm install
    #     npm run build
    
    # - name: Archive UI Integration Build
    #   uses: vimtor/action-zip@v1
    #   with:
    #     files: './ui/dist/'
    #     recursive: true
    #     dest: 'integration-release-${{steps.date.outputs.date}}.zip'

    # - name: Archive Full Build
    #   uses: vimtor/action-zip@v1
    #   with:
    #     files: 'integration-release-${{steps.date.outputs.date}}.zip'
    #     recursive: true        
    #     dest: 'LS-release-${{github.run_number}}-${{steps.date.outputs.date}}-${{steps.hash.outputs.hash}}.zip'
    
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    # - name: Create a GitHub release
    #   uses: ncipollo/release-action@v1
    #   with:
    #     tag: ${{ steps.tag_version.outputs.new_tag }}
    #     name: Release ${{ steps.tag_version.outputs.new_tag }}
    #     body: ${{ github.event.head_commit.message }}        
    #     artifacts: 'LS-release-${{github.run_number}}-${{steps.date.outputs.date}}-${{steps.hash.outputs.hash}}.zip'
    #     token: ${{ secrets.GITHUB_TOKEN }}
    # - name: Print Release Version
    #   run: echo 'Released ${{ steps.tag_version.outputs.new_tag }} Build'

    - name: Get latest release details
      id: release_details
      uses: cardinalby/git-get-release-action@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag: latest

    - name: Print Data
      run: |
        echo ${{ steps.release_details.outputs.assets[0].name }}
        echo ${{ steps.release_details.outputs.name }}